using BarsTest.Models;
using Dapper;
using Npgsql;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

namespace BarsTest.Repository
{
    public class PersonRepository
    {
        public NpgsqlConnection con;
        //To Handle connection related activities      
        private void connection()
        {
            con = new NpgsqlConnection("Server = localhost; Database = test; User Id = postgres; Password = Leila1995; Port = 5432; ");
        }

        private string nullToDb(object obj)
        {
            if (obj == null)
            {
                return "null";
            }
            else
            {
                return obj.ToString();
            }
        }
        //To Add Employee details      
        public void AddPerson(Person objPer)
        {

            //Additing the employess      
            try
            {                
                string sql = $"insert into public.citizensregister(id, firstname, lastname, middlename, autogenerated, snils, snilsdate, birthday, passportnum1, passportnum2, passportissueplace, passportissuedate, registraddress, livingaddress, education, maritalstatus, socialstat, job, pensiontype, invalidgroup) " +
                  $"values ({objPer.id},'{objPer.firstName}','{objPer.lastName}','{objPer.middleName}'," +
                  $"{nullToDb(objPer.autoGenerated)}," +
                  $"'{objPer.Snils}'," +
                  $"{nullToDb(objPer.SnilsDate)}," +
                  $"{nullToDb(objPer.birthday)}," +
                  $"'{objPer.passportNum1}','{objPer.passportNum2}','{objPer.passportIssuePlace}'," +
                  $"{nullToDb(objPer.passportIssueDate)}," +
                  $"'{objPer.registrAdress}','{objPer.livingAdress}','{objPer.education}'," +
                  $"{nullToDb(objPer.maritalstatus)}," +
                  $"'{objPer.SocialStat}','{objPer.Job}','{objPer.PensionType}'," +
                  $"{nullToDb(objPer.InvalidGroup)});";

                connection();
                con.Open();
                con.Execute(sql);
                con.Close();
            }
            catch (Exception ex)
            {

                throw ex;
            }

        }
        //To view employee details with generic list       
        public List<Person> GetAllPersons()
        {
            try
            {
                string sql = "SELECT * FROM public.citizensregister;";
                connection();
                con.Open();
                
                IList<Person> EmpList = SqlMapper.Query<Person>(
                    con, sql).ToList();
                 
                con.Close();
                return EmpList.ToList();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        //To Update Employee details      
        public void UpdatePerson(Person objUpdate)
        {
            try
            {
                string sql = $"UPDATE public.citizensregister " +
                    $"SET firstname ='{objUpdate.firstName}', lastname ='{objUpdate.lastName}', middlename ='{objUpdate.middleName}', autogenerated ={nullToDb(objUpdate.autoGenerated)}, snils ='{objUpdate.Snils}', snilsdate ={nullToDb(objUpdate.SnilsDate)}, birthday ={nullToDb(objUpdate.birthday)}, passportnum1 ='{objUpdate.passportNum1}', passportnum2 ='{objUpdate.passportNum2}', " +
                    $"passportissueplace ='{objUpdate.passportIssuePlace}', passportissuedate ={nullToDb(objUpdate.passportIssueDate)}, registraddress ='{objUpdate.registrAdress}', livingaddress ='{objUpdate.livingAdress}', education ='{objUpdate.education}', maritalstatus ={nullToDb(objUpdate.maritalstatus)}, socialstat ='{objUpdate.SocialStat}', job ='{objUpdate.Job}', pensiontype ='{objUpdate.PensionType}', invalidgroup ={nullToDb(objUpdate.InvalidGroup)}" +
                    $"   WHERE id = {objUpdate.id}; ";
                sql = sql.Replace("''", "null");
                connection();
                con.Open();
                con.Execute(sql);//con.Execute(sql, objUpdate, commandType: CommandType.StoredProcedure);
                con.Close();
            }
            catch (Exception)
            {

                throw;
            }

        }
        //To delete Employee details      
        public bool DeletePerson(int Id)
        {
            try
            {
                string sql = $"DELETE FROM public.citizensregister" +
                    $" WHERE id = {Id}; ";
                DynamicParameters param = new DynamicParameters();
                param.Add("@EmpId", Id);
                connection();
                con.Open();
                con.Execute(sql);//con.Execute(sql, param, commandType: CommandType.StoredProcedure);
                con.Close();
                return true;
            }
            catch (Exception ex)
            {
                //Log error as per your need       
                throw ex;
            }
        }
    }
}